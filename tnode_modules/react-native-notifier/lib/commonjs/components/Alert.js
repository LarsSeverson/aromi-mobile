"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const bgColors = {
  error: '#E03737',
  warn: '#FFAC00',
  info: '#007BFF',
  success: '#00B104'
};
const s = _reactNative.StyleSheet.create({
  container: {
    margin: 10
  },
  title: {
    fontWeight: 'bold',
    textAlign: 'center',
    fontSize: 15,
    lineHeight: 22,
    color: 'white'
  },
  description: {
    textAlign: 'center',
    fontSize: 14,
    lineHeight: 22,
    color: 'white'
  }
});
const AlertComponent = ({
  title,
  titleStyle,
  description,
  descriptionStyle,
  alertType = 'success',
  backgroundColor,
  textColor,
  ContainerComponent,
  maxTitleLines,
  maxDescriptionLines
}) => {
  const Container = ContainerComponent ?? _reactNative.SafeAreaView;
  const textStyle = textColor ? {
    color: textColor
  } : null;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Container, {
    style: {
      backgroundColor: backgroundColor || bgColors[alertType]
    },
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: s.container,
      children: [!!title && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [s.title, textStyle, titleStyle],
        numberOfLines: maxTitleLines,
        children: title
      }), !!description && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [s.description, textStyle, descriptionStyle],
        numberOfLines: maxDescriptionLines,
        children: description
      })]
    })
  });
};
var _default = exports.default = AlertComponent;
//# sourceMappingURL=Alert.js.map